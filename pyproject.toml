[build-system]
requires = ["uv_build>=0.9.3,<0.10.0"]
build-backend = "uv_build"

[project]
name = "device_monitor"
version = "0.1.0"
description = "Battery monitoring service"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    { name = "mign0n", email = "mign0n.git@gmail.com" }
]
requires-python = ">=3.13"
dependencies = [
    "alembic>=1.17.0",
    "asyncpg>=0.30.0",
    "fastapi>=0.119.0",
    "python-dotenv>=1.1.1",
    "sqlalchemy>=2.0.44",
    "uvicorn>=0.37.0",
]

[dependency-groups]
dev = [
    "mypy>=1.18.2",
    "pre-commit>=4.3.0",
    "ruff>=0.14.1",
]

[tool.ruff]
preview = true
fix = true
line-length = 80
target-version = "py313"

[tool.ruff.lint]
select = [
  "A",    # flake8-builtins
  "B",    # flake8-bugbear
  "C4",   # flake8-comprehensions
  "C90",  # maccabe
  "COM",  # flake8-commas
  "D",    # pydocstyle
  "DTZ",  # flake8-datetimez
  "E",    # pycodestyle
  "ERA",  # flake8-eradicate
  "EXE",  # flake8-executable
  "F",    # pyflakes
  "FBT",  # flake8-boolean-trap
  "FLY",  # pyflint
  "FURB", # refurb
  "G",    # flake8-logging-format
  "I",    # isort
  "ICN",  # flake8-import-conventions
  "ISC",  # flake8-implicit-str-concat
  "LOG",  # flake8-logging
  "N",    # pep8-naming
  "PERF", # perflint
  "PIE",  # flake8-pie
  "PL",   # pylint
  "PT",   # flake8-pytest-style
  "PTH",  # flake8-use-pathlib
  "Q",    # flake8-quotes
  "RET",  # flake8-return
  "RSE",  # flake8-raise
  "RUF",  # ruff
  "S",    # flake8-bandit
  "SIM",  # flake8-simpify
  "SLF",  # flake8-self
  "SLOT", # flake8-slots
  "T100", # flake8-debugger
  "TRY",  # tryceratops
  "UP",   # pyupgrade
  "W",    # pycodestyle
  "YTT",  # flake8-2020
]
ignore = [
  "D100",     # missing docstring in public module
  "D104",     # missing docstring in public package
  "D106",     # missing docstring in public nested class
  "COM812",   # may cause conflicts when used with the formatter
]

mccabe.max-complexity = 6
pydocstyle.convention = "google"

[tool.ruff.lint.per-file-ignores]
"**/migrations/env.py" = ["D"]

[tool.mypy]
python_version = "3.13"
mypy_path = "src"
ignore_missing_imports = true
strict = true
strict_bytes = true
local_partial_types = true
warn_unreachable = true

enable_error_code = [
  "truthy-bool",
  "truthy-iterable",
  "redundant-expr",
  "unused-awaitable",
  "ignore-without-code",
  "possibly-undefined",
  "redundant-self",
  "explicit-override",
  "mutable-override",
  "unimported-reveal",
  "deprecated",
]
